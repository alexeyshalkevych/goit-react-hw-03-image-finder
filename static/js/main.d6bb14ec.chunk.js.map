{"version":3,"sources":["components/SearchBar/SearchBar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Button/Button.js","components/Loader/Loader.js","services/images-api.js","components/App/App.js","index.js"],"names":["SearchBar","state","query","handleSubmit","e","preventDefault","props","onSubmit","resetForm","handleChange","target","name","value","setState","this","className","type","autoComplete","placeholder","onChange","Component","ImageGalleryItem","webformatURL","largeImageURL","onImageClick","onClick","src","alt","ImageGallery","items","map","image","key","id","Modal","backdropRef","createRef","handlePressKey","code","onClose","handleBackdropClick","current","window","addEventListener","removeEventListener","largeImg","ref","Button","buttonRef","scrollTo","top","offsetTop","behavior","styles","textAlign","SpinLoader","style","color","height","width","timeout","KEY","fetchImages","page","BASE_URL","axios","get","then","data","hits","catch","console","error","App","searchQuery","images","loading","largeImageUrl","isOpen","handleImageClick","imageUrl","handleModalClose","imageApi","finally","handleSearchSubmit","prevProps","prevState","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d6bb14ec.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class SearchBar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    query: '',\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.query);\n\n    this.resetForm();\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n\n  resetForm = () => {\n    this.setState({\n      query: '',\n    });\n  };\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            name=\"query\"\n            autoComplete=\"off\"\n            placeholder=\"Search images and photos\"\n            value={query}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, onImageClick }) => (\n  <li className=\"ImageGalleryItem\" onClick={() => onImageClick(largeImageURL)}>\n    <img src={webformatURL} alt=\"item-img\" className=\"ImageGalleryItem-image\" />\n  </li>\n);\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nconst ImageGallery = ({ items, onImageClick }) => (\n  <ul className=\"ImageGallery\">\n    {items.map(image => (\n      <ImageGalleryItem\n        key={image.id + image.webformatURL}\n        {...image}\n        onImageClick={onImageClick}\n      />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Modal extends Component {\n  static propTypes = {\n    largeImg: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n  };\n\n  backdropRef = createRef();\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handlePressKey);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handlePressKey);\n  }\n\n  handlePressKey = e => {\n    if (e.code !== 'Escape') {\n      return;\n    }\n\n    this.props.onClose();\n  };\n\n  handleBackdropClick = e => {\n    const { current } = this.backdropRef;\n\n    if (current && e.target !== current) {\n      return;\n    }\n\n    this.props.onClose();\n  };\n\n  render() {\n    const { largeImg } = this.props;\n\n    return (\n      <div\n        className=\"Overlay\"\n        ref={this.backdropRef}\n        onClick={this.handleBackdropClick}\n      >\n        <div className=\"Modal\">\n          <img src={largeImg} alt=\"\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Button extends Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n  };\n\n  buttonRef = createRef();\n\n  componentDidMount() {\n    const { current } = this.buttonRef;\n\n    window.scrollTo({\n      top: current.offsetTop,\n      behavior: 'smooth',\n    });\n  }\n\n  render() {\n    const { onClick } = this.props;\n\n    return (\n      <button\n        className=\"Button\"\n        type=\"button\"\n        onClick={onClick}\n        ref={this.buttonRef}\n      >\n        Load more\n      </button>\n    );\n  }\n}\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst styles = { textAlign: 'center' };\n\nconst SpinLoader = () => (\n  <Loader\n    style={styles}\n    type=\"ThreeDots\"\n    color=\"#F1005C\"\n    height={100}\n    width={100}\n    timeout={3000}\n  />\n);\n\nexport default SpinLoader;\n","import axios from 'axios';\n\nconst KEY = '14950911-bbc5df412008123c8c9940cf8';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const fetchImages = (query = '', page = 1) => {\n  const BASE_URL = `https://pixabay.com/api/?q=${query}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n\n  return (\n    axios\n      .get(BASE_URL)\n      .then(({ data }) => data.hits)\n      // eslint-disable-next-line no-console\n      .catch(console.error)\n  );\n};\n","import React, { Component } from 'react';\nimport SearchBar from '../SearchBar/SearchBar';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport ModalWindow from '../Modal/Modal';\nimport Button from '../Button/Button';\nimport SpinLoader from '../Loader/Loader';\nimport * as imageApi from '../../services/images-api';\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    searchQuery: '',\n    images: [],\n    page: 1,\n    loading: false,\n    largeImageUrl: '',\n    isOpen: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery } = this.state;\n\n    if (prevState.searchQuery !== searchQuery) {\n      this.fetchImages();\n    }\n  }\n\n  handleImageClick = imageUrl => {\n    this.setState({ largeImageUrl: imageUrl, isOpen: true });\n  };\n\n  handleModalClose = () => {\n    this.setState({ largeImageUrl: '', isOpen: false });\n  };\n\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n\n    this.setState({ loading: true });\n\n    imageApi\n      .fetchImages(searchQuery, page)\n      .then(images =>\n        this.setState(state => ({\n          images: [...state.images, ...images],\n          page: state.page + 1,\n        })),\n      )\n      // eslint-disable-next-line no-console\n      .catch(console.error)\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  handleSearchSubmit = query => {\n    const { searchQuery } = this.state;\n\n    if (searchQuery === query) return;\n\n    this.setState({ searchQuery: query, images: [], page: 1 });\n  };\n\n  render() {\n    const { images, largeImageUrl, isOpen, loading } = this.state;\n\n    return (\n      <div className=\"App\">\n        <SearchBar onSubmit={this.handleSearchSubmit} />\n        {images.length > 0 && (\n          <ImageGallery items={images} onImageClick={this.handleImageClick} />\n        )}\n        {isOpen && (\n          <ModalWindow\n            largeImg={largeImageUrl}\n            onClose={this.handleModalClose}\n          />\n        )}\n        {loading && <SpinLoader />}\n        {images.length > 0 && !loading && <Button onClick={this.fetchImages} />}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}