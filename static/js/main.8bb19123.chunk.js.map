{"version":3,"sources":["components/SearchBar/SearchBar.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","services/images-api.js","components/ImageFinder/ImageFinder.js","components/App/App.js","index.js"],"names":["SearchBar","state","query","handleSubmit","e","preventDefault","props","onSubmit","resetForm","handleChange","target","name","value","setState","this","className","type","autoComplete","placeholder","onChange","Component","Modal","backdropRef","createRef","handlePressKey","code","onClose","handleBackdropClick","current","window","addEventListener","removeEventListener","children","isOpen","ref","onClick","ImageGalleryItem","webformatURL","largeImageURL","onImageClick","galleryImage","useRef","modalImage","alt","src","styles","textAlign","SpinLoader","style","color","height","width","timeout","ImageGallery","items","onImageScroll","hasMore","pageStart","loadMore","loader","key","Date","now","map","image","id","KEY","axios","defaults","baseURL","fetchImages","page","URL","get","then","data","hits","catch","error","ImageFinder","searchQuery","images","handleImageClick","handleModalClose","imageApi","length","toast","console","handleSearchSubmit","prevProps","prevState","autoClose","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8bb19123.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class SearchBar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    query: '',\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.query);\n\n    this.resetForm();\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n\n  resetForm = () => {\n    this.setState({\n      query: '',\n    });\n  };\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            name=\"query\"\n            autoComplete=\"off\"\n            placeholder=\"Search images and photos\"\n            value={query}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Modal extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    onClose: PropTypes.func.isRequired,\n    isOpen: PropTypes.bool.isRequired,\n  };\n\n  backdropRef = createRef();\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handlePressKey);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handlePressKey);\n  }\n\n  handlePressKey = e => {\n    if (e.code !== 'Escape') {\n      return;\n    }\n\n    this.props.onClose();\n  };\n\n  handleBackdropClick = e => {\n    const { current } = this.backdropRef;\n\n    if (current && e.target !== current) {\n      return;\n    }\n\n    this.props.onClose();\n  };\n\n  render() {\n    const { children, isOpen } = this.props;\n\n    if (!isOpen) {\n      return null;\n    }\n\n    return (\n      <div\n        className=\"Overlay\"\n        ref={this.backdropRef}\n        onClick={this.handleBackdropClick}\n      >\n        <div className=\"Modal\">{children}</div>\n      </div>\n    );\n  }\n}\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../Modal/Modal';\n\nconst ImageGalleryItem = ({\n  webformatURL,\n  largeImageURL,\n  onImageClick,\n  isOpen,\n  onClose,\n}) => {\n  const galleryImage = useRef();\n  const modalImage = useRef();\n\n  const clickImage = e => {\n    if (e.target.alt !== 'item-img') return;\n\n    modalImage.current = galleryImage.current;\n\n    onImageClick();\n  };\n\n  return (\n    <li className=\"ImageGalleryItem\" onClick={clickImage}>\n      <img\n        src={webformatURL}\n        alt=\"item-img\"\n        className=\"ImageGalleryItem-image\"\n        ref={galleryImage}\n      />\n      {modalImage.current === galleryImage.current && (\n        <Modal isOpen={isOpen} onClose={onClose}>\n          <img src={largeImageURL} alt=\"item-large-img\" ref={modalImage} />\n        </Modal>\n      )}\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  onImageClick: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst styles = { textAlign: 'center' };\n\nconst SpinLoader = () => (\n  <Loader\n    style={styles}\n    type=\"ThreeDots\"\n    color=\"#F1005C\"\n    height={100}\n    width={100}\n    timeout={3000}\n  />\n);\n\nexport default SpinLoader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport SpinLoader from '../Loader/Loader';\n\nconst ImageGallery = ({\n  items,\n  onImageClick,\n  onImageScroll,\n  hasMore,\n  isOpen,\n  onClose,\n}) => (\n  <InfiniteScroll\n    pageStart={0}\n    loadMore={onImageScroll}\n    hasMore={hasMore}\n    loader={<SpinLoader key={Date.now} />}\n  >\n    <ul className=\"ImageGallery\">\n      {items.map(image => (\n        <ImageGalleryItem\n          key={image.id + image.webformatURL}\n          {...image}\n          onImageClick={onImageClick}\n          isOpen={isOpen}\n          onClose={onClose}\n        />\n      ))}\n    </ul>\n  </InfiniteScroll>\n);\n\nImageGallery.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onImageClick: PropTypes.func.isRequired,\n  onImageScroll: PropTypes.func.isRequired,\n  hasMore: PropTypes.bool.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import axios from 'axios';\n\nconst KEY = '14950911-bbc5df412008123c8c9940cf8';\naxios.defaults.baseURL = 'https://pixabay.com/api';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const fetchImages = (query = '', page = 1) => {\n  const URL = `/?q=${query}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n\n  return (\n    axios\n      .get(URL)\n      .then(({ data }) => data.hits)\n      // eslint-disable-next-line no-console\n      .catch(error => {\n        throw error;\n      })\n  );\n};\n","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport SearchBar from '../SearchBar/SearchBar';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport * as imageApi from '../../services/images-api';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass ImageFinder extends Component {\n  state = {\n    searchQuery: '',\n    images: [],\n    page: 1,\n    isOpen: false,\n    hasMore: false,\n    error: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery } = this.state;\n\n    if (prevState.searchQuery !== searchQuery) {\n      this.fetchImages();\n    }\n  }\n\n  handleImageClick = () => {\n    this.setState({ isOpen: true });\n  };\n\n  handleModalClose = () => {\n    this.setState({ isOpen: false });\n  };\n\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n\n    imageApi\n      .fetchImages(searchQuery, page)\n      .then(images => {\n        if (images.length) {\n          this.setState(state => ({\n            images: [...state.images, ...images],\n            page: state.page + 1,\n            hasMore: true,\n            error: false,\n          }));\n          return;\n        }\n\n        this.setState({ hasMore: false, error: true });\n        toast.error(`No images!`);\n      })\n      // eslint-disable-next-line no-console\n      .catch(console.error);\n  };\n\n  handleSearchSubmit = query => {\n    const { searchQuery } = this.state;\n\n    if (searchQuery === query) return;\n\n    this.setState({ searchQuery: query, images: [], page: 1 });\n  };\n\n  render() {\n    const { images, isOpen, hasMore, error } = this.state;\n\n    return (\n      <div className=\"ImageFinderContainer\">\n        <SearchBar onSubmit={this.handleSearchSubmit} />\n        {images.length > 0 && (\n          <ImageGallery\n            items={images}\n            onImageClick={this.handleImageClick}\n            onImageScroll={this.fetchImages}\n            hasMore={hasMore}\n            isOpen={isOpen}\n            onClose={this.handleModalClose}\n          />\n        )}\n        {error && <ToastContainer autoClose={3000} />}\n      </div>\n    );\n  }\n}\n\nexport default ImageFinder;\n","import React from 'react';\nimport ImageFinder from '../ImageFinder/ImageFinder';\nimport './App.css';\n\nconst App = () => <ImageFinder />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}